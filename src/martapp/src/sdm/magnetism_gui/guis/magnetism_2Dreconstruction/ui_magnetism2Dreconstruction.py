# -*- coding: utf-8 -*-
# Copyright (C) 2014-2025 ALBA Synchrotron
#
# Authors: A. Estela Herguedas Alonso, Joaquin Gomez Sanchez
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_magnetism2Dreconstruction(object):
    def setupUi(self, magnetism2Dreconstruction):
        magnetism2Dreconstruction.setObjectName("magnetism2Dreconstruction")
        magnetism2Dreconstruction.resize(750, 891)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("ALBA_positiu.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        magnetism2Dreconstruction.setWindowIcon(icon)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(magnetism2Dreconstruction)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(magnetism2Dreconstruction)
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.groupBox = QtWidgets.QGroupBox(magnetism2Dreconstruction)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 1, 0, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.groupBox)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 2, 0, 1, 1)
        self.TS1_lineEdit = QtWidgets.QLineEdit(self.groupBox)
        self.TS1_lineEdit.setObjectName("TS1_lineEdit")
        self.gridLayout.addWidget(self.TS1_lineEdit, 1, 1, 1, 1)
        self.path_lineEdit = QtWidgets.QLineEdit(self.groupBox)
        self.path_lineEdit.setToolTip("")
        self.path_lineEdit.setObjectName("path_lineEdit")
        self.gridLayout.addWidget(self.path_lineEdit, 0, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.groupBox)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 0, 0, 1, 1)
        self.TS2_lineEdit = QtWidgets.QLineEdit(self.groupBox)
        self.TS2_lineEdit.setObjectName("TS2_lineEdit")
        self.gridLayout.addWidget(self.TS2_lineEdit, 2, 1, 1, 1)
        self.selectPath_pushButton = QtWidgets.QPushButton(self.groupBox)
        self.selectPath_pushButton.setObjectName("selectPath_pushButton")
        self.gridLayout.addWidget(self.selectPath_pushButton, 0, 2, 1, 1)
        self.selectTS1_pushButton = QtWidgets.QPushButton(self.groupBox)
        self.selectTS1_pushButton.setObjectName("selectTS1_pushButton")
        self.gridLayout.addWidget(self.selectTS1_pushButton, 1, 2, 1, 1)
        self.selectTS2_pushButton = QtWidgets.QPushButton(self.groupBox)
        self.selectTS2_pushButton.setObjectName("selectTS2_pushButton")
        self.gridLayout.addWidget(self.selectTS2_pushButton, 2, 2, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 0, 0, 1, 1)
        self.verticalLayout.addWidget(self.groupBox)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_7 = QtWidgets.QLabel(magnetism2Dreconstruction)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_6.addWidget(self.label_7)
        self.distFid_doubleSpinBox = QtWidgets.QDoubleSpinBox(magnetism2Dreconstruction)
        self.distFid_doubleSpinBox.setMinimum(-1e+26)
        self.distFid_doubleSpinBox.setMaximum(1e+32)
        self.distFid_doubleSpinBox.setObjectName("distFid_doubleSpinBox")
        self.horizontalLayout_6.addWidget(self.distFid_doubleSpinBox)
        self.verticalLayout.addLayout(self.horizontalLayout_6)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_9 = QtWidgets.QLabel(magnetism2Dreconstruction)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_2.addWidget(self.label_9)
        self.rotationAxis_comboBox = QtWidgets.QComboBox(magnetism2Dreconstruction)
        self.rotationAxis_comboBox.setObjectName("rotationAxis_comboBox")
        self.rotationAxis_comboBox.addItem("")
        self.rotationAxis_comboBox.addItem("")
        self.horizontalLayout_2.addWidget(self.rotationAxis_comboBox)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.groupBox_2 = QtWidgets.QGroupBox(magnetism2Dreconstruction)
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.selectPointsTS2_checkBox = QtWidgets.QCheckBox(self.groupBox_2)
        self.selectPointsTS2_checkBox.setObjectName("selectPointsTS2_checkBox")
        self.gridLayout_3.addWidget(self.selectPointsTS2_checkBox, 2, 1, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.groupBox_2)
        self.label_6.setObjectName("label_6")
        self.gridLayout_3.addWidget(self.label_6, 0, 1, 1, 1)
        self.roiTS1_checkBox = QtWidgets.QCheckBox(self.groupBox_2)
        self.roiTS1_checkBox.setObjectName("roiTS1_checkBox")
        self.gridLayout_3.addWidget(self.roiTS1_checkBox, 1, 0, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.groupBox_2)
        self.label_5.setObjectName("label_5")
        self.gridLayout_3.addWidget(self.label_5, 0, 0, 1, 1)
        self.roiTS2_checkBox = QtWidgets.QCheckBox(self.groupBox_2)
        self.roiTS2_checkBox.setObjectName("roiTS2_checkBox")
        self.gridLayout_3.addWidget(self.roiTS2_checkBox, 1, 1, 1, 1)
        self.selectPointsTS1_checkBox = QtWidgets.QCheckBox(self.groupBox_2)
        self.selectPointsTS1_checkBox.setObjectName("selectPointsTS1_checkBox")
        self.gridLayout_3.addWidget(self.selectPointsTS1_checkBox, 2, 0, 1, 1)
        self.gridLayout_4.addLayout(self.gridLayout_3, 5, 0, 1, 1)
        self.verticalLayout.addWidget(self.groupBox_2)
        self.groupBox_3 = QtWidgets.QGroupBox(magnetism2Dreconstruction)
        self.groupBox_3.setObjectName("groupBox_3")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.groupBox_3)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.gridLayout_5 = QtWidgets.QGridLayout()
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.roiJoinTS_checkBox = QtWidgets.QCheckBox(self.groupBox_3)
        self.roiJoinTS_checkBox.setObjectName("roiJoinTS_checkBox")
        self.gridLayout_5.addWidget(self.roiJoinTS_checkBox, 0, 0, 1, 1)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.selectPointsJoinTS_checkBox = QtWidgets.QCheckBox(self.groupBox_3)
        self.selectPointsJoinTS_checkBox.setObjectName("selectPointsJoinTS_checkBox")
        self.horizontalLayout_5.addWidget(self.selectPointsJoinTS_checkBox)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem)
        self.label_17 = QtWidgets.QLabel(self.groupBox_3)
        self.label_17.setObjectName("label_17")
        self.horizontalLayout_5.addWidget(self.label_17)
        self.iniAngleJoinTS_doubleSpinBox = QtWidgets.QDoubleSpinBox(self.groupBox_3)
        self.iniAngleJoinTS_doubleSpinBox.setToolTip("")
        self.iniAngleJoinTS_doubleSpinBox.setMinimum(-360.0)
        self.iniAngleJoinTS_doubleSpinBox.setMaximum(360.0)
        self.iniAngleJoinTS_doubleSpinBox.setObjectName("iniAngleJoinTS_doubleSpinBox")
        self.horizontalLayout_5.addWidget(self.iniAngleJoinTS_doubleSpinBox)
        self.gridLayout_5.addLayout(self.horizontalLayout_5, 3, 0, 1, 1)
        self.gridLayout_6.addLayout(self.gridLayout_5, 0, 0, 1, 1)
        self.verticalLayout.addWidget(self.groupBox_3)
        self.groupBox_4 = QtWidgets.QGroupBox(magnetism2Dreconstruction)
        self.groupBox_4.setObjectName("groupBox_4")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.groupBox_4)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.gridLayout_7 = QtWidgets.QGridLayout()
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.label_13 = QtWidgets.QLabel(self.groupBox_4)
        self.label_13.setObjectName("label_13")
        self.gridLayout_7.addWidget(self.label_13, 2, 0, 1, 1)
        self.attLength_lineEdit = QtWidgets.QLineEdit(self.groupBox_4)
        self.attLength_lineEdit.setObjectName("attLength_lineEdit")
        self.gridLayout_7.addWidget(self.attLength_lineEdit, 0, 1, 1, 1)
        self.label_11 = QtWidgets.QLabel(self.groupBox_4)
        self.label_11.setObjectName("label_11")
        self.gridLayout_7.addWidget(self.label_11, 1, 0, 1, 1)
        self.thickness_lineEdit = QtWidgets.QLineEdit(self.groupBox_4)
        self.thickness_lineEdit.setObjectName("thickness_lineEdit")
        self.gridLayout_7.addWidget(self.thickness_lineEdit, 1, 1, 1, 1)
        self.dicCoef_lineEdit = QtWidgets.QLineEdit(self.groupBox_4)
        self.dicCoef_lineEdit.setObjectName("dicCoef_lineEdit")
        self.gridLayout_7.addWidget(self.dicCoef_lineEdit, 2, 1, 1, 1)
        self.label_10 = QtWidgets.QLabel(self.groupBox_4)
        self.label_10.setObjectName("label_10")
        self.gridLayout_7.addWidget(self.label_10, 0, 0, 1, 1)
        self.gridLayout_8.addLayout(self.gridLayout_7, 0, 0, 1, 1)
        self.verticalLayout.addWidget(self.groupBox_4)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_8 = QtWidgets.QLabel(magnetism2Dreconstruction)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_3.addWidget(self.label_8)
        self.repeatStep_comboBox = QtWidgets.QComboBox(magnetism2Dreconstruction)
        self.repeatStep_comboBox.setObjectName("repeatStep_comboBox")
        self.repeatStep_comboBox.addItem("")
        self.repeatStep_comboBox.addItem("")
        self.repeatStep_comboBox.addItem("")
        self.repeatStep_comboBox.addItem("")
        self.repeatStep_comboBox.addItem("")
        self.horizontalLayout_3.addWidget(self.repeatStep_comboBox)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.verticalLayout_2.addLayout(self.verticalLayout)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.start_pushButton = QtWidgets.QPushButton(magnetism2Dreconstruction)
        self.start_pushButton.setObjectName("start_pushButton")
        self.horizontalLayout.addWidget(self.start_pushButton)
        self.visualization_pushButton = QtWidgets.QPushButton(magnetism2Dreconstruction)
        self.visualization_pushButton.setObjectName("visualization_pushButton")
        self.horizontalLayout.addWidget(self.visualization_pushButton)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.notes = QtWidgets.QTextBrowser(magnetism2Dreconstruction)
        self.notes.setObjectName("notes")
        self.verticalLayout_2.addWidget(self.notes)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_12 = QtWidgets.QLabel(magnetism2Dreconstruction)
        self.label_12.setObjectName("label_12")
        self.horizontalLayout_4.addWidget(self.label_12)
        self.buttonBox = QtWidgets.QDialogButtonBox(magnetism2Dreconstruction)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Close)
        self.buttonBox.setObjectName("buttonBox")
        self.horizontalLayout_4.addWidget(self.buttonBox)
        self.verticalLayout_2.addLayout(self.horizontalLayout_4)

        self.retranslateUi(magnetism2Dreconstruction)
        self.buttonBox.accepted.connect(magnetism2Dreconstruction.accept) # type: ignore
        self.buttonBox.rejected.connect(magnetism2Dreconstruction.reject) # type: ignore
        self.selectPointsJoinTS_checkBox.toggled['bool'].connect(self.label_17.setDisabled) # type: ignore
        self.selectPointsJoinTS_checkBox.toggled['bool'].connect(self.iniAngleJoinTS_doubleSpinBox.setDisabled) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(magnetism2Dreconstruction)
        magnetism2Dreconstruction.setTabOrder(self.path_lineEdit, self.selectPath_pushButton)
        magnetism2Dreconstruction.setTabOrder(self.selectPath_pushButton, self.TS1_lineEdit)
        magnetism2Dreconstruction.setTabOrder(self.TS1_lineEdit, self.selectTS1_pushButton)
        magnetism2Dreconstruction.setTabOrder(self.selectTS1_pushButton, self.TS2_lineEdit)
        magnetism2Dreconstruction.setTabOrder(self.TS2_lineEdit, self.selectTS2_pushButton)
        magnetism2Dreconstruction.setTabOrder(self.selectTS2_pushButton, self.roiTS1_checkBox)
        magnetism2Dreconstruction.setTabOrder(self.roiTS1_checkBox, self.selectPointsTS1_checkBox)
        magnetism2Dreconstruction.setTabOrder(self.selectPointsTS1_checkBox, self.roiTS2_checkBox)
        magnetism2Dreconstruction.setTabOrder(self.roiTS2_checkBox, self.selectPointsTS2_checkBox)
        magnetism2Dreconstruction.setTabOrder(self.selectPointsTS2_checkBox, self.roiJoinTS_checkBox)
        magnetism2Dreconstruction.setTabOrder(self.roiJoinTS_checkBox, self.attLength_lineEdit)
        magnetism2Dreconstruction.setTabOrder(self.attLength_lineEdit, self.thickness_lineEdit)
        magnetism2Dreconstruction.setTabOrder(self.thickness_lineEdit, self.dicCoef_lineEdit)
        magnetism2Dreconstruction.setTabOrder(self.dicCoef_lineEdit, self.start_pushButton)
        magnetism2Dreconstruction.setTabOrder(self.start_pushButton, self.visualization_pushButton)
        magnetism2Dreconstruction.setTabOrder(self.visualization_pushButton, self.notes)

    def retranslateUi(self, magnetism2Dreconstruction):
        _translate = QtCore.QCoreApplication.translate
        magnetism2Dreconstruction.setWindowTitle(_translate("magnetism2Dreconstruction", "MARTApp"))
        self.label.setToolTip(_translate("magnetism2Dreconstruction", "This pipeline computes the reconstruction of the 3D magnetization of 2D magnetic structures.\n"
"Steps: cosine_stretching>> join_tilt_series >> reconstruction"))
        self.label.setText(_translate("magnetism2Dreconstruction", "Magnetic reconstruction of 2D samples"))
        self.groupBox.setTitle(_translate("magnetism2Dreconstruction", "Input data"))
        self.label_3.setToolTip(_translate("magnetism2Dreconstruction", " Output file (HDF5) from the magnetism_xmcd pipeline containing the stack."))
        self.label_3.setText(_translate("magnetism2Dreconstruction", "Tilt Series 1"))
        self.label_4.setToolTip(_translate("magnetism2Dreconstruction", " Output file (HDF5) from the magnetism_xmcd pipeline containing the rotated stack."))
        self.label_4.setText(_translate("magnetism2Dreconstruction", "Tilt Series 2 (rotated)"))
        self.label_2.setToolTip(_translate("magnetism2Dreconstruction", "Output path to save results of the reconstruction."))
        self.label_2.setText(_translate("magnetism2Dreconstruction", "Path"))
        self.selectPath_pushButton.setText(_translate("magnetism2Dreconstruction", "Select"))
        self.selectTS1_pushButton.setText(_translate("magnetism2Dreconstruction", "Select"))
        self.selectTS2_pushButton.setText(_translate("magnetism2Dreconstruction", "Select"))
        self.label_7.setText(_translate("magnetism2Dreconstruction", "Distance between magnetic layer and fiducials [in pixels]:"))
        self.label_9.setText(_translate("magnetism2Dreconstruction", "Rotation axis"))
        self.rotationAxis_comboBox.setCurrentText(_translate("magnetism2Dreconstruction", "Y"))
        self.rotationAxis_comboBox.setItemText(0, _translate("magnetism2Dreconstruction", "Y"))
        self.rotationAxis_comboBox.setItemText(1, _translate("magnetism2Dreconstruction", "X"))
        self.groupBox_2.setTitle(_translate("magnetism2Dreconstruction", "Cosine Stretching Alignment"))
        self.selectPointsTS2_checkBox.setToolTip(_translate("magnetism2Dreconstruction", " If set, the initial transformation will be obtained from the selected points. Otherwise, it will be computed only from the angles."))
        self.selectPointsTS2_checkBox.setText(_translate("magnetism2Dreconstruction", "Select points for initial transformation"))
        self.label_6.setText(_translate("magnetism2Dreconstruction", "Tilt Series 2"))
        self.roiTS1_checkBox.setToolTip(_translate("magnetism2Dreconstruction", "If set, the user will be able to select ROI from stack for the registration done during the cosine stretching step."))
        self.roiTS1_checkBox.setText(_translate("magnetism2Dreconstruction", "Select ROI "))
        self.label_5.setText(_translate("magnetism2Dreconstruction", "Tilt Series 1"))
        self.roiTS2_checkBox.setToolTip(_translate("magnetism2Dreconstruction", "If set, the user will be able to select ROI from rotated stack for the registration done during the cosine stretching step."))
        self.roiTS2_checkBox.setText(_translate("magnetism2Dreconstruction", "Select ROI "))
        self.selectPointsTS1_checkBox.setToolTip(_translate("magnetism2Dreconstruction", " If set, the initial transformation will be obtained from the selected points. Otherwise, it will be computed only from the angles."))
        self.selectPointsTS1_checkBox.setText(_translate("magnetism2Dreconstruction", "Select points for initial transformation"))
        self.groupBox_3.setTitle(_translate("magnetism2Dreconstruction", "Join Tilt Series"))
        self.roiJoinTS_checkBox.setToolTip(_translate("magnetism2Dreconstruction", "If set, the user will be able to select a ROI from the cosine stretching stacks for the registration done during the join tilt series step."))
        self.roiJoinTS_checkBox.setText(_translate("magnetism2Dreconstruction", "Select ROI"))
        self.selectPointsJoinTS_checkBox.setToolTip(_translate("magnetism2Dreconstruction", " If set, the initial transformation will be obtained from the selected points. Otherwise, it will be 90deg."))
        self.selectPointsJoinTS_checkBox.setText(_translate("magnetism2Dreconstruction", "Select points for initial transformation"))
        self.label_17.setToolTip(_translate("magnetism2Dreconstruction", "Initial rotation angle for alignment between tilt series."))
        self.label_17.setText(_translate("magnetism2Dreconstruction", "Initial angle"))
        self.groupBox_4.setTitle(_translate("magnetism2Dreconstruction", "Reconstruction"))
        self.label_13.setToolTip(_translate("magnetism2Dreconstruction", "Dichroic coefficient. It can be obtained from the energy spectra, by computing the asymmetry ratio. If unknown, set to 1"))
        self.label_13.setText(_translate("magnetism2Dreconstruction", "Dichroic coefficient"))
        self.attLength_lineEdit.setText(_translate("magnetism2Dreconstruction", "1"))
        self.label_11.setToolTip(_translate("magnetism2Dreconstruction", "Value of the thickness of the magnetic material layer for reconstruction in meters. If unknown, set to 1"))
        self.label_11.setText(_translate("magnetism2Dreconstruction", "Thickness (m)"))
        self.thickness_lineEdit.setText(_translate("magnetism2Dreconstruction", "1"))
        self.dicCoef_lineEdit.setText(_translate("magnetism2Dreconstruction", "1"))
        self.label_10.setToolTip(_translate("magnetism2Dreconstruction", "Value for attenuation length of magnetic material in meters. This value is applied for all the\n"
"                        reconstructed volume. It can be obtained from the CXRO database. If unknown, set to 1"))
        self.label_10.setText(_translate("magnetism2Dreconstruction", "Attenuation length (m)"))
        self.label_8.setText(_translate("magnetism2Dreconstruction", "Repeat step"))
        self.repeatStep_comboBox.setItemText(0, _translate("magnetism2Dreconstruction", "All"))
        self.repeatStep_comboBox.setItemText(1, _translate("magnetism2Dreconstruction", "Align Tilt Series 1"))
        self.repeatStep_comboBox.setItemText(2, _translate("magnetism2Dreconstruction", "Align Tilt Series 2"))
        self.repeatStep_comboBox.setItemText(3, _translate("magnetism2Dreconstruction", "Join Tilt Series"))
        self.repeatStep_comboBox.setItemText(4, _translate("magnetism2Dreconstruction", "2D Reconstruction"))
        self.start_pushButton.setToolTip(_translate("magnetism2Dreconstruction", "Execute pipeline \"magnetism_2Dreconstruction\""))
        self.start_pushButton.setText(_translate("magnetism2Dreconstruction", "GO!"))
        self.visualization_pushButton.setToolTip(_translate("magnetism2Dreconstruction", "Open HDF5 for visualization with Napari"))
        self.visualization_pushButton.setText(_translate("magnetism2Dreconstruction", "Visualization"))
        self.label_12.setText(_translate("magnetism2Dreconstruction", "Copyright © 2024 ALBA-CELLS"))
